// <auto-generated />
using Ecommerce.Infrstructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Infrstructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Core.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices and gadgets including phones, laptops, and more.",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Wide range of books from different genres and authors.",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Men's, women's, and children's clothing for all seasons.",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Appliances, furniture, and decor for your home.",
                            Name = "Home & Kitchen"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Equipment and gear for various sports and outdoor activities.",
                            Name = "Sports & Outdoors"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Skincare, makeup, and personal hygiene products.",
                            Name = "Beauty & Personal Care"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Toys, games, and educational materials for children.",
                            Name = "Toys & Games"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Car parts, accessories, and tools for vehicle maintenance.",
                            Name = "Automotive"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Health supplements, fitness equipment, and wellness products.",
                            Name = "Health & Wellness"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Stationery, organizers, and other essentials for office use.",
                            Name = "Office Supplies"
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest model smartphone with advanced features.",
                            Name = "Smartphone",
                            Price = 599.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "High-performance laptop suitable for gaming and work.",
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Bestselling fiction novel by a renowned author.",
                            Name = "Fiction Novel",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Warm and stylish jacket for winter.",
                            Name = "Men's Jacket",
                            Price = 79.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "High-speed blender perfect for smoothies and soups.",
                            Name = "Blender",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Description = "Professional-grade tennis racket for serious players.",
                            Name = "Tennis Racket",
                            Price = 129.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            Description = "Moisturizing face cream for all skin types.",
                            Name = "Face Cream",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 7,
                            Description = "Fun and engaging board game for the whole family.",
                            Name = "Board Game",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 8,
                            Description = "Durable and long-lasting car battery.",
                            Name = "Car Battery",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 9,
                            Description = "Non-slip yoga mat for comfortable workouts.",
                            Name = "Yoga Mat",
                            Price = 19.99m
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entites.Product", b =>
                {
                    b.HasOne("Ecommerce.Core.Entites.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Core.Entites.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
